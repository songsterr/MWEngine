apply plugin: 'com.android.library'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
    }
}

task swig(type:Exec) {
    workingDir = "${project(':MWEngine').projectDir}"

    commandLine "./build.sh"

//    standardOutput = new FileOutputStream("${project(':MWEngine').projectDir}/build/swig.log")
//    errorOutput = new FileOutputStream("${project(':MWEngine').projectDir}/build/swig.err")
    doFirst {
        println "Execution SWIG..."
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 17
        versionCode 1
        versionName "1.0.0"
    }
    if ( project.hasProperty( "RELEASE_STORE_FILE" )) {
        signingConfigs {
            release {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }
    buildTypes {
        if ( project.hasProperty( "RELEASE_STORE_FILE" )) {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.release
            }
        }
    }
    sourceSets {
        main {
            java.srcDirs    = [ 'src/main/java' ]
            jniLibs.srcDirs = [ 'libs' ]
            jni.srcDirs = []
            resources.srcDirs = ['src']
            res.srcDirs = ['res']

        }
    }
    defaultConfig {
        ndk {
            moduleName 'libmwengine'
        }
    }

    lintOptions {
        abortOnError false
    }
}

afterEvaluate {
    preReleaseBuild.dependsOn swig
    preDebugBuild.dependsOn swig
}
